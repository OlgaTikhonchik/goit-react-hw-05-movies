{"version":3,"file":"static/js/691.aba80c55.chunk.js","mappings":"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","sources":["pages/Home/Home.styled.jsx","pages/Movies/Movies.styled.jsx","pages/Movies/Movies.jsx","services/api.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const ContainerHome = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 20px;\n  // width: 800px;\n  margin: 0 auto;\n`;\nexport const Title = styled.h2`\n  font-size: 40px;\n  font-weight: 700;\n  margin: 0;\n  padding: 20px;\n  color: #824113;\n  text-align: center;\n\n  :hover {\n    color: #d38146;\n  }\n`;\n\nexport const ListMovies = styled.ul`\n  list-style: none;\n  margin: 0;\n  padding: 0;\n`;\nexport const ItemMovies = styled.li`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 5px;\n  padding: 5px;\n  justify-content: space-evenly;\n  font-size: 24px;\n`;\nexport const LinkMovies = styled(Link)`\n  text-decoration: none;\n  color: #2c1708;\n\n  :hover {\n    color: #9c6b47;\n  }\n`;\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 20px;\n  width: 800px;\n  margin: 0 auto;\n`;\n\nexport const FormMovies = styled.form`\n  align-items: center;\n  // margin-top: 20px;\n`;\n\nexport const Input = styled.input`\n  width: 500px;\n  height: 30px;\n  border-radius: 6px;\n  outline: none;\n  font-size: 20px;\n  padding-left: 10px;\n  color: #803a3a;\n  margin-right: 20px;\n  border: 2px solid black;\n`;\nexport const Button = styled.button`\n  display: inline-block;\n  width: 130px;\n  height: 37px;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n  border: 2px solid black;\n  border-radius: 6px;\n  font-size: 15px;\n  font-weight: 600;\n  color: #803a3a;\n`;\n","import { useEffect, useState } from 'react';\nimport { useLocation, useSearchParams } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { fetchSearchMovies } from '../../services/api';\nimport {\n  ItemMovies,\n  LinkMovies,\n  ListMovies,\n  Title,\n} from 'pages/Home/Home.styled';\nimport { Button, Container, FormMovies, Input } from './Movies.styled';\n\n// const BASE_URL = 'https://api.themoviedb.org/3';\n// const KEY = 'ab7e82ec9455b58954116ec4a812321e';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const location = useLocation();\n\n  // console.log(movies);\n\n  const movieId = searchParams.get('movieId') ?? '';\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    setSearchParams({ movieId: event.currentTarget.elements.search.value });\n  };\n\n  useEffect(() => {\n    if (movieId !== '') {\n      // fetch(`${BASE_URL}/search/movie?api_key=${KEY}&query=${movieId}`)\n      //   .then(response => response.json())\n      //   .then(data => {\n      //     setMovies(data.results);\n      //   });\n\n      fetchSearchMovies(movieId)\n        .then(response => setMovies(response.results))\n        .catch(error => {\n          console.log(error);\n        });\n    }\n  }, [movieId]);\n\n  // const updateQueryString = event => {\n  //   const movieIdValue = event.target.value;\n  //   if (movieIdValue === '') {\n  //     return setSearchParams({});\n  //   }\n  //   setSearchParams({ movieId: movieIdValue });\n  // };\n\n  return (\n    <Container>\n      <FormMovies type=\"submit\" onSubmit={handleSubmit}>\n        <Input\n          type=\"text\"\n          name=\"search\"\n          // onChange={updateQueryString}\n        />\n        <Button>Search movie</Button>\n        {movies?.length > 0 && (\n          <div>\n            <Title>List movies</Title>\n            <ListMovies>\n              {movies.map(({ title, name, id }) => (\n                <ItemMovies key={id}>\n                  <LinkMovies\n                    // style={{ textDecoration: 'none', color: '#804216' }}\n                    to={`/movies/${id}`}\n                    state={{ from: location }}\n                  >\n                    {title || name}\n                  </LinkMovies>\n                </ItemMovies>\n              ))}\n            </ListMovies>\n          </div>\n        )}\n      </FormMovies>\n    </Container>\n  );\n};\n\nMovies.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n    })\n  ),\n};\n\nexport default Movies;\n","const BASE_URL = 'https://api.themoviedb.org/3';\nconst KEY = 'ab7e82ec9455b58954116ec4a812321e';\n\nexport const fetchTrending = () => {\n  try {\n    return fetch(`${BASE_URL}/trending/all/day?api_key=${KEY}`).then(response =>\n      response.json()\n    );\n  } catch (error) {\n    throw new Error(error.message);\n  }\n};\n\nexport const fetchSearchMovies = movieId => {\n  try {\n    return fetch(\n      `${BASE_URL}/search/movie?api_key=${KEY}&query=${movieId}`\n    ).then(response => response.json());\n  } catch (error) {\n    throw new Error(error.message);\n  }\n};\n\nexport const fetchMoviesDetails = movieId => {\n  try {\n    return fetch(`${BASE_URL}/movie/${movieId}?api_key=${KEY}`).then(response =>\n      response.json()\n    );\n  } catch (error) {\n    throw new Error(error.message);\n  }\n};\n\nexport const fetchMoviesCast = movieId => {\n  try {\n    return fetch(`${BASE_URL}/movie/${movieId}/credits?api_key=${KEY}`).then(\n      response => response.json()\n    );\n  } catch (error) {\n    throw new Error(error.message);\n  }\n};\n\nexport const fetchMoviesReviews = movieId => {\n  try {\n    return fetch(`${BASE_URL}/movie/${movieId}/reviews?api_key=${KEY}`).then(\n      response => response.json()\n    );\n  } catch (error) {\n    throw new Error(error.message);\n  }\n};\n"],"names":["ContainerHome","styled","Title","ListMovies","ItemMovies","LinkMovies","Link","Container","FormMovies","Input","Button","useState","movies","setMovies","useSearchParams","searchParams","setSearchParams","location","useLocation","movieId","get","useEffect","fetchSearchMovies","then","response","results","catch","error","console","log","type","onSubmit","event","preventDefault","currentTarget","elements","search","value","name","length","map","title","id","to","state","from","BASE_URL","KEY","fetchTrending","fetch","json","Error","message","fetchMoviesDetails","fetchMoviesCast","fetchMoviesReviews"],"sourceRoot":""}