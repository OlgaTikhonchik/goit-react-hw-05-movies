{"version":3,"file":"static/js/186.be19d2d6.chunk.js","mappings":"8LA0DA,UAlDgB,WACd,OAA8BA,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAmBR,OAlBAE,QAAQC,IAAIL,GACZI,QAAQC,IAAIH,IAEZI,EAAAA,EAAAA,YAAU,YAQRC,EAAAA,EAAAA,IAAmBL,GAChBM,MAAK,SAAAC,GAAI,OAAIR,EAAWQ,EAAKC,QAApB,IACTC,OAAM,SAAAC,GACLR,QAAQC,IAAIO,EACb,GACJ,GAAE,CAACV,KAGF,yBACsB,IAAnBF,EAAQa,QACP,gBAAKC,MAAO,CAAEC,WAAY,IAAKC,SAAU,OAAQC,MAAO,OAAxD,wDAIA,+BACGjB,QADH,IACGA,OADH,EACGA,EAASkB,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACZ,2BACE,qCAAaD,MACb,uBAAIC,MAFGF,EADG,OAUvB,C,uJC/CD,IAAMG,EAAW,+BACXC,EAAM,mCAECC,EAAgB,WAC3B,IACE,OAAOC,MAAM,GAAD,OAAIH,EAAJ,qCAAyCC,IAAOf,MAAK,SAAAkB,GAAQ,OACvEA,EAASC,MAD8D,GAK1E,CAFC,MAAOf,GACP,MAAM,IAAIgB,MAAMhB,EAAMiB,QACvB,CACF,EAEYC,EAAoB,SAAA5B,GAC/B,IACE,OAAOuB,MAAM,GAAD,OACPH,EADO,iCAC0BC,EAD1B,kBACuCrB,IACjDM,MAAK,SAAAkB,GAAQ,OAAIA,EAASC,MAAb,GAGhB,CAFC,MAAOf,GACP,MAAM,IAAIgB,MAAMhB,EAAMiB,QACvB,CACF,EAEYE,EAAqB,SAAA7B,GAChC,IACE,OAAOuB,MAAM,GAAD,OAAIH,EAAJ,kBAAsBpB,EAAtB,oBAAyCqB,IAAOf,MAAK,SAAAkB,GAAQ,OACvEA,EAASC,MAD8D,GAK1E,CAFC,MAAOf,GACP,MAAM,IAAIgB,MAAMhB,EAAMiB,QACvB,CACF,EAEYG,EAAkB,SAAA9B,GAC7B,IACE,OAAOuB,MAAM,GAAD,OAAIH,EAAJ,kBAAsBpB,EAAtB,4BAAiDqB,IAAOf,MAClE,SAAAkB,GAAQ,OAAIA,EAASC,MAAb,GAIX,CAFC,MAAOf,GACP,MAAM,IAAIgB,MAAMhB,EAAMiB,QACvB,CACF,EAEYtB,EAAqB,SAAAL,GAChC,IACE,OAAOuB,MAAM,GAAD,OAAIH,EAAJ,kBAAsBpB,EAAtB,4BAAiDqB,IAAOf,MAClE,SAAAkB,GAAQ,OAAIA,EAASC,MAAb,GAIX,CAFC,MAAOf,GACP,MAAM,IAAIgB,MAAMhB,EAAMiB,QACvB,CACF,C","sources":["components/Reviews/Reviews.jsx","services/api.jsx"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { fetchMoviesReviews } from '../../services/api';\n\n// const BASE_URL = 'https://api.themoviedb.org/3';\n// const KEY = 'ab7e82ec9455b58954116ec4a812321e';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const { movieId } = useParams();\n  console.log(reviews);\n  console.log(movieId);\n\n  useEffect(() => {\n    // fetch(`${BASE_URL}/movie/${movieId}/reviews?api_key=${KEY}`)\n    //   .then(response => response.json())\n    //   .then(data => {\n    //     setReviews(data.results);\n    //     console.log(data);\n    //   });\n\n    fetchMoviesReviews(movieId)\n      .then(data => setReviews(data.results))\n      .catch(error => {\n        console.log(error);\n      });\n  }, [movieId]);\n\n  return (\n    <div>\n      {reviews.length === 0 ? (\n        <div style={{ fontWeight: 500, fontSize: '20px', color: 'red' }}>\n          We don`t have any rewiews for this movie`\n        </div>\n      ) : (\n        <ul>\n          {reviews?.map(({ id, author, content }) => (\n            <li key={id}>\n              <h2>Author: {author}</h2>\n              <p>{content}</p>\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n};\n\nReviews.propTypes = {\n  reviews: PropTypes.shape({\n    author: PropTypes.string.isRequired,\n    content: PropTypes.string.isRequired,\n\n    id: PropTypes.number.isRequired,\n  }),\n};\n\nexport default Reviews;\n","const BASE_URL = 'https://api.themoviedb.org/3';\nconst KEY = 'ab7e82ec9455b58954116ec4a812321e';\n\nexport const fetchTrending = () => {\n  try {\n    return fetch(`${BASE_URL}/trending/all/day?api_key=${KEY}`).then(response =>\n      response.json()\n    );\n  } catch (error) {\n    throw new Error(error.message);\n  }\n};\n\nexport const fetchSearchMovies = movieId => {\n  try {\n    return fetch(\n      `${BASE_URL}/search/movie?api_key=${KEY}&query=${movieId}`\n    ).then(response => response.json());\n  } catch (error) {\n    throw new Error(error.message);\n  }\n};\n\nexport const fetchMoviesDetails = movieId => {\n  try {\n    return fetch(`${BASE_URL}/movie/${movieId}?api_key=${KEY}`).then(response =>\n      response.json()\n    );\n  } catch (error) {\n    throw new Error(error.message);\n  }\n};\n\nexport const fetchMoviesCast = movieId => {\n  try {\n    return fetch(`${BASE_URL}/movie/${movieId}/credits?api_key=${KEY}`).then(\n      response => response.json()\n    );\n  } catch (error) {\n    throw new Error(error.message);\n  }\n};\n\nexport const fetchMoviesReviews = movieId => {\n  try {\n    return fetch(`${BASE_URL}/movie/${movieId}/reviews?api_key=${KEY}`).then(\n      response => response.json()\n    );\n  } catch (error) {\n    throw new Error(error.message);\n  }\n};\n"],"names":["useState","reviews","setReviews","movieId","useParams","console","log","useEffect","fetchMoviesReviews","then","data","results","catch","error","length","style","fontWeight","fontSize","color","map","id","author","content","BASE_URL","KEY","fetchTrending","fetch","response","json","Error","message","fetchSearchMovies","fetchMoviesDetails","fetchMoviesCast"],"sourceRoot":""}