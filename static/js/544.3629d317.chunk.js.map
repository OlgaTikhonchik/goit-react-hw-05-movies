{"version":3,"file":"static/js/544.3629d317.chunk.js","mappings":"sMAsDA,UA9Ca,WACX,OAA4BA,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACMC,GAAWC,EAAAA,EAAAA,MAgBjB,OAdAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,MACGC,MAAK,SAAAC,GAAQ,OAAIN,EAAUM,EAASC,QAAvB,IACbC,OAAM,SAAAC,GACLC,QAAQC,IAAIF,EACb,GACJ,GAAE,KASD,2BACE,4BACE,4CACA,wBACGV,EAAOa,KAAI,gBAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,KAAMC,EAAhB,EAAgBA,GAAhB,OACV,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaD,GAAME,MAAO,CAAEC,KAAMjB,GAA1C,SACGY,GAASC,KAFLC,EADC,UAWrB,C,uJC1CD,IAAMI,EAAW,+BACXC,EAAM,mCAEChB,EAAgB,WAC3B,IACE,OAAOiB,MAAM,GAAD,OAAIF,EAAJ,qCAAyCC,IAAOf,MAAK,SAAAC,GAAQ,OACvEA,EAASgB,MAD8D,GAK1E,CAFC,MAAOb,GACP,MAAM,IAAIc,MAAMd,EAAMe,QACvB,CACF,EAEYC,EAAoB,SAAAC,GAC/B,IACE,OAAOL,MAAM,GAAD,OACPF,EADO,iCAC0BC,EAD1B,kBACuCM,IACjDrB,MAAK,SAAAC,GAAQ,OAAIA,EAASgB,MAAb,GAGhB,CAFC,MAAOb,GACP,MAAM,IAAIc,MAAMd,EAAMe,QACvB,CACF,EAEYG,EAAqB,SAAAD,GAChC,IACE,OAAOL,MAAM,GAAD,OAAIF,EAAJ,kBAAsBO,EAAtB,oBAAyCN,IAAOf,MAAK,SAAAC,GAAQ,OACvEA,EAASgB,MAD8D,GAK1E,CAFC,MAAOb,GACP,MAAM,IAAIc,MAAMd,EAAMe,QACvB,CACF,EAEYI,EAAkB,SAAAF,GAC7B,IACE,OAAOL,MAAM,GAAD,OAAIF,EAAJ,kBAAsBO,EAAtB,4BAAiDN,IAAOf,MAClE,SAAAC,GAAQ,OAAIA,EAASgB,MAAb,GAIX,CAFC,MAAOb,GACP,MAAM,IAAIc,MAAMd,EAAMe,QACvB,CACF,EAEYK,EAAqB,SAAAH,GAChC,IACE,OAAOL,MAAM,GAAD,OAAIF,EAAJ,kBAAsBO,EAAtB,4BAAiDN,IAAOf,MAClE,SAAAC,GAAQ,OAAIA,EAASgB,MAAb,GAIX,CAFC,MAAOb,GACP,MAAM,IAAIc,MAAMd,EAAMe,QACvB,CACF,C","sources":["pages/Home/Home.jsx","services/api.jsx"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { fetchTrending } from '../../services/api';\nimport { Link, useLocation } from 'react-router-dom';\n\n// const BASE_URL = 'https://api.themoviedb.org/3';\n// const KEY = 'ab7e82ec9455b58954116ec4a812321e';\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n  const location = useLocation();\n\n  useEffect(() => {\n    fetchTrending()\n      .then(response => setMovies(response.results))\n      .catch(error => {\n        console.log(error);\n      });\n  }, []);\n\n  // useEffect(() => {\n  //   fetch(`${BASE_URL}/trending/all/day?api_key=${KEY}`)\n  //     .then(response => response.json())\n  //     .then(json => setMovies(json.results));\n  // }, []);\n\n  return (\n    <main>\n      <div>\n        <h2>Trending today</h2>\n        <ul>\n          {movies.map(({ title, name, id }) => (\n            <li key={id}>\n              <Link to={`/movies/${id}`} state={{ from: location }}>\n                {title || name}\n              </Link>\n            </li>\n          ))}\n        </ul>\n      </div>\n    </main>\n  );\n};\n\nHome.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n    })\n  ),\n};\n\nexport default Home;\n","const BASE_URL = 'https://api.themoviedb.org/3';\nconst KEY = 'ab7e82ec9455b58954116ec4a812321e';\n\nexport const fetchTrending = () => {\n  try {\n    return fetch(`${BASE_URL}/trending/all/day?api_key=${KEY}`).then(response =>\n      response.json()\n    );\n  } catch (error) {\n    throw new Error(error.message);\n  }\n};\n\nexport const fetchSearchMovies = movieId => {\n  try {\n    return fetch(\n      `${BASE_URL}/search/movie?api_key=${KEY}&query=${movieId}`\n    ).then(response => response.json());\n  } catch (error) {\n    throw new Error(error.message);\n  }\n};\n\nexport const fetchMoviesDetails = movieId => {\n  try {\n    return fetch(`${BASE_URL}/movie/${movieId}?api_key=${KEY}`).then(response =>\n      response.json()\n    );\n  } catch (error) {\n    throw new Error(error.message);\n  }\n};\n\nexport const fetchMoviesCast = movieId => {\n  try {\n    return fetch(`${BASE_URL}/movie/${movieId}/credits?api_key=${KEY}`).then(\n      response => response.json()\n    );\n  } catch (error) {\n    throw new Error(error.message);\n  }\n};\n\nexport const fetchMoviesReviews = movieId => {\n  try {\n    return fetch(`${BASE_URL}/movie/${movieId}/reviews?api_key=${KEY}`).then(\n      response => response.json()\n    );\n  } catch (error) {\n    throw new Error(error.message);\n  }\n};\n"],"names":["useState","movies","setMovies","location","useLocation","useEffect","fetchTrending","then","response","results","catch","error","console","log","map","title","name","id","to","state","from","BASE_URL","KEY","fetch","json","Error","message","fetchSearchMovies","movieId","fetchMoviesDetails","fetchMoviesCast","fetchMoviesReviews"],"sourceRoot":""}