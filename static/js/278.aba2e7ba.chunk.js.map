{"version":3,"file":"static/js/278.aba2e7ba.chunk.js","mappings":"sMAuFA,UA/Ee,WAAO,IAAD,EACnB,GAA4BA,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,GAAWC,EAAAA,EAAAA,MAIXC,EAAO,UAAGJ,EAAaK,IAAI,kBAApB,QAAkC,GAgC/C,OAxBAC,EAAAA,EAAAA,YAAU,WACQ,KAAZF,IAOFG,EAAAA,EAAAA,IAAkBH,GACfI,MAAK,SAAAC,GAAQ,OAAIX,EAAUW,EAASC,QAAvB,IACbC,OAAM,SAAAC,GACLC,QAAQC,IAAIF,EACb,GAEN,GAAE,CAACR,KAWF,2BACE,0BACE,kBAAMW,KAAK,SAASC,SAjCL,SAAAC,GACnBA,EAAMC,iBAENjB,EAAgB,CAAEG,QAASa,EAAME,cAAcC,SAASC,OAAOC,OAChE,EA6BK,WACE,kBACEP,KAAK,OACLQ,KAAK,YAGP,8CACO,OAAN1B,QAAM,IAANA,OAAA,EAAAA,EAAQ2B,QAAS,IAChB,4BACE,yCACA,wBACG3B,EAAO4B,KAAI,gBAAGC,EAAH,EAAGA,MAAOH,EAAV,EAAUA,KAAMI,EAAhB,EAAgBA,GAAhB,OACV,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaD,GAAME,MAAO,CAAEC,KAAM5B,GAA1C,SACGwB,GAASH,KAFLI,EADC,eAc3B,C,uJC3ED,IAAMI,EAAW,+BACXC,EAAM,mCAECC,EAAgB,WAC3B,IACE,OAAOC,MAAM,GAAD,OAAIH,EAAJ,qCAAyCC,IAAOxB,MAAK,SAAAC,GAAQ,OACvEA,EAAS0B,MAD8D,GAK1E,CAFC,MAAOvB,GACP,MAAM,IAAIwB,MAAMxB,EAAMyB,QACvB,CACF,EAEY9B,EAAoB,SAAAH,GAC/B,IACE,OAAO8B,MAAM,GAAD,OACPH,EADO,iCAC0BC,EAD1B,kBACuC5B,IACjDI,MAAK,SAAAC,GAAQ,OAAIA,EAAS0B,MAAb,GAGhB,CAFC,MAAOvB,GACP,MAAM,IAAIwB,MAAMxB,EAAMyB,QACvB,CACF,EAEYC,EAAqB,SAAAlC,GAChC,IACE,OAAO8B,MAAM,GAAD,OAAIH,EAAJ,kBAAsB3B,EAAtB,oBAAyC4B,IAAOxB,MAAK,SAAAC,GAAQ,OACvEA,EAAS0B,MAD8D,GAK1E,CAFC,MAAOvB,GACP,MAAM,IAAIwB,MAAMxB,EAAMyB,QACvB,CACF,EAEYE,EAAkB,SAAAnC,GAC7B,IACE,OAAO8B,MAAM,GAAD,OAAIH,EAAJ,kBAAsB3B,EAAtB,4BAAiD4B,IAAOxB,MAClE,SAAAC,GAAQ,OAAIA,EAAS0B,MAAb,GAIX,CAFC,MAAOvB,GACP,MAAM,IAAIwB,MAAMxB,EAAMyB,QACvB,CACF,EAEYG,EAAqB,SAAApC,GAChC,IACE,OAAO8B,MAAM,GAAD,OAAIH,EAAJ,kBAAsB3B,EAAtB,4BAAiD4B,IAAOxB,MAClE,SAAAC,GAAQ,OAAIA,EAAS0B,MAAb,GAIX,CAFC,MAAOvB,GACP,MAAM,IAAIwB,MAAMxB,EAAMyB,QACvB,CACF,C","sources":["pages/Movies/Movies.jsx","services/api.jsx"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { fetchSearchMovies } from '../../services/api';\n\n// const BASE_URL = 'https://api.themoviedb.org/3';\n// const KEY = 'ab7e82ec9455b58954116ec4a812321e';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const location = useLocation();\n\n  // console.log(movies);\n\n  const movieId = searchParams.get('movieId') ?? '';\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    setSearchParams({ movieId: event.currentTarget.elements.search.value });\n  };\n\n  useEffect(() => {\n    if (movieId !== '') {\n      // fetch(`${BASE_URL}/search/movie?api_key=${KEY}&query=${movieId}`)\n      //   .then(response => response.json())\n      //   .then(data => {\n      //     setMovies(data.results);\n      //   });\n\n      fetchSearchMovies(movieId)\n        .then(response => setMovies(response.results))\n        .catch(error => {\n          console.log(error);\n        });\n    }\n  }, [movieId]);\n\n  // const updateQueryString = event => {\n  //   const movieIdValue = event.target.value;\n  //   if (movieIdValue === '') {\n  //     return setSearchParams({});\n  //   }\n  //   setSearchParams({ movieId: movieIdValue });\n  // };\n\n  return (\n    <main>\n      <div>\n        <form type=\"submit\" onSubmit={handleSubmit}>\n          <input\n            type=\"text\"\n            name=\"search\"\n            // onChange={updateQueryString}\n          />\n          <button>Search movie</button>\n          {movies?.length > 0 && (\n            <div>\n              <h2>List movies</h2>\n              <ul>\n                {movies.map(({ title, name, id }) => (\n                  <li key={id}>\n                    <Link to={`/movies/${id}`} state={{ from: location }}>\n                      {title || name}\n                    </Link>\n                  </li>\n                ))}\n              </ul>\n            </div>\n          )}\n        </form>\n      </div>\n    </main>\n  );\n};\n\nMovies.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n    })\n  ),\n};\n\nexport default Movies;\n","const BASE_URL = 'https://api.themoviedb.org/3';\nconst KEY = 'ab7e82ec9455b58954116ec4a812321e';\n\nexport const fetchTrending = () => {\n  try {\n    return fetch(`${BASE_URL}/trending/all/day?api_key=${KEY}`).then(response =>\n      response.json()\n    );\n  } catch (error) {\n    throw new Error(error.message);\n  }\n};\n\nexport const fetchSearchMovies = movieId => {\n  try {\n    return fetch(\n      `${BASE_URL}/search/movie?api_key=${KEY}&query=${movieId}`\n    ).then(response => response.json());\n  } catch (error) {\n    throw new Error(error.message);\n  }\n};\n\nexport const fetchMoviesDetails = movieId => {\n  try {\n    return fetch(`${BASE_URL}/movie/${movieId}?api_key=${KEY}`).then(response =>\n      response.json()\n    );\n  } catch (error) {\n    throw new Error(error.message);\n  }\n};\n\nexport const fetchMoviesCast = movieId => {\n  try {\n    return fetch(`${BASE_URL}/movie/${movieId}/credits?api_key=${KEY}`).then(\n      response => response.json()\n    );\n  } catch (error) {\n    throw new Error(error.message);\n  }\n};\n\nexport const fetchMoviesReviews = movieId => {\n  try {\n    return fetch(`${BASE_URL}/movie/${movieId}/reviews?api_key=${KEY}`).then(\n      response => response.json()\n    );\n  } catch (error) {\n    throw new Error(error.message);\n  }\n};\n"],"names":["useState","movies","setMovies","useSearchParams","searchParams","setSearchParams","location","useLocation","movieId","get","useEffect","fetchSearchMovies","then","response","results","catch","error","console","log","type","onSubmit","event","preventDefault","currentTarget","elements","search","value","name","length","map","title","id","to","state","from","BASE_URL","KEY","fetchTrending","fetch","json","Error","message","fetchMoviesDetails","fetchMoviesCast","fetchMoviesReviews"],"sourceRoot":""}