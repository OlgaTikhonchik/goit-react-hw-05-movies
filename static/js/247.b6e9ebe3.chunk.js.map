{"version":3,"file":"static/js/247.b6e9ebe3.chunk.js","mappings":"8LAQMA,EAAW,SAAAC,GACf,GAAIA,EACF,MAAM,oDAAN,OAA2DA,EAE9D,EAsDD,UApDa,WAAO,IAAD,EACTC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAkCE,EAAAA,EAAAA,UAAS,IAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KAiBA,OAhBAC,QAAQC,IAAIH,IAEZI,EAAAA,EAAAA,YAAU,YAORC,EAAAA,EAAAA,IAAgBR,GACbS,MAAK,SAAAC,GAAI,OAAIN,EAAaM,EAAjB,IACTC,OAAM,SAAAC,GACLP,QAAQC,IAAIM,EACb,GACJ,GAAE,CAACZ,KAGF,0BACE,kCACGG,EAAUU,YADb,aACG,EAAgBC,KACf,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,aAAcC,EAArB,EAAqBA,cAAeC,EAApC,EAAoCA,UAAWC,EAA/C,EAA+CA,WAA/C,OACE,2BACE,gBACEC,IAAKtB,EAASkB,GACdK,IAAI,GACJC,MAAM,QACNC,OAAO,WAET,8BAAMN,MACN,uCAAeC,MACf,wCAAgBC,OATTJ,EADX,OAiBT,C,uJCtDD,IAAMS,EAAW,+BACXC,EAAM,mCAECC,EAAgB,WAC3B,IACE,OAAOC,MAAM,GAAD,OAAIH,EAAJ,qCAAyCC,IAAOhB,MAAK,SAAAmB,GAAQ,OACvEA,EAASC,MAD8D,GAK1E,CAFC,MAAOjB,GACP,MAAM,IAAIkB,MAAMlB,EAAMmB,QACvB,CACF,EAEYC,EAAoB,SAAAhC,GAC/B,IACE,OAAO2B,MAAM,GAAD,OACPH,EADO,iCAC0BC,EAD1B,kBACuCzB,IACjDS,MAAK,SAAAmB,GAAQ,OAAIA,EAASC,MAAb,GAGhB,CAFC,MAAOjB,GACP,MAAM,IAAIkB,MAAMlB,EAAMmB,QACvB,CACF,EAEYE,EAAqB,SAAAjC,GAChC,IACE,OAAO2B,MAAM,GAAD,OAAIH,EAAJ,kBAAsBxB,EAAtB,oBAAyCyB,IAAOhB,MAAK,SAAAmB,GAAQ,OACvEA,EAASC,MAD8D,GAK1E,CAFC,MAAOjB,GACP,MAAM,IAAIkB,MAAMlB,EAAMmB,QACvB,CACF,EAEYvB,EAAkB,SAAAR,GAC7B,IACE,OAAO2B,MAAM,GAAD,OAAIH,EAAJ,kBAAsBxB,EAAtB,4BAAiDyB,IAAOhB,MAClE,SAAAmB,GAAQ,OAAIA,EAASC,MAAb,GAIX,CAFC,MAAOjB,GACP,MAAM,IAAIkB,MAAMlB,EAAMmB,QACvB,CACF,EAEYG,EAAqB,SAAAlC,GAChC,IACE,OAAO2B,MAAM,GAAD,OAAIH,EAAJ,kBAAsBxB,EAAtB,4BAAiDyB,IAAOhB,MAClE,SAAAmB,GAAQ,OAAIA,EAASC,MAAb,GAIX,CAFC,MAAOjB,GACP,MAAM,IAAIkB,MAAMlB,EAAMmB,QACvB,CACF,C","sources":["components/Cast/Cast.jsx","services/api.jsx"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { fetchMoviesCast } from '../../services/api';\n\n// const BASE_URL = 'https://api.themoviedb.org/3';\n// const KEY = 'ab7e82ec9455b58954116ec4a812321e';\n\nconst photoURL = profilePath => {\n  if (profilePath) {\n    return `https://www.themoviedb.org/t/p/w276_and_h350_face${profilePath}`;\n  }\n};\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [actorInfo, setActorInfo] = useState([]);\n  console.log(actorInfo);\n\n  useEffect(() => {\n    // fetch(`${BASE_URL}/movie/${movieId}/credits?api_key=${KEY}`)\n    //   .then(response => response.json())\n    //   .then(data => {\n    //     setActorInfo(data);\n    //     console.log(data);\n    //   });\n    fetchMoviesCast(movieId)\n      .then(data => setActorInfo(data))\n      .catch(error => {\n        console.log(error);\n      });\n  }, [movieId]);\n\n  return (\n    <div>\n      <ul>\n        {actorInfo.cast?.map(\n          ({ id, profile_path, original_name, character, popularity }) => (\n            <li key={id}>\n              <img\n                src={photoURL(profile_path)}\n                alt=\"\"\n                width=\"250px\"\n                height=\"300px\"\n              />\n              <h2> {original_name}</h2>\n              <p>Character: {character}</p>\n              <p>Popularity: {popularity}</p>\n            </li>\n          )\n        )}\n      </ul>\n    </div>\n  );\n};\n\nCast.propTypes = {\n  actorInfo: PropTypes.shape({\n    original_name: PropTypes.string.isRequired,\n    character: PropTypes.string.isRequired,\n    profile_path: PropTypes.string,\n    id: PropTypes.number.isRequired,\n    popularity: PropTypes.number,\n  }),\n};\n\nexport default Cast;\n","const BASE_URL = 'https://api.themoviedb.org/3';\nconst KEY = 'ab7e82ec9455b58954116ec4a812321e';\n\nexport const fetchTrending = () => {\n  try {\n    return fetch(`${BASE_URL}/trending/all/day?api_key=${KEY}`).then(response =>\n      response.json()\n    );\n  } catch (error) {\n    throw new Error(error.message);\n  }\n};\n\nexport const fetchSearchMovies = movieId => {\n  try {\n    return fetch(\n      `${BASE_URL}/search/movie?api_key=${KEY}&query=${movieId}`\n    ).then(response => response.json());\n  } catch (error) {\n    throw new Error(error.message);\n  }\n};\n\nexport const fetchMoviesDetails = movieId => {\n  try {\n    return fetch(`${BASE_URL}/movie/${movieId}?api_key=${KEY}`).then(response =>\n      response.json()\n    );\n  } catch (error) {\n    throw new Error(error.message);\n  }\n};\n\nexport const fetchMoviesCast = movieId => {\n  try {\n    return fetch(`${BASE_URL}/movie/${movieId}/credits?api_key=${KEY}`).then(\n      response => response.json()\n    );\n  } catch (error) {\n    throw new Error(error.message);\n  }\n};\n\nexport const fetchMoviesReviews = movieId => {\n  try {\n    return fetch(`${BASE_URL}/movie/${movieId}/reviews?api_key=${KEY}`).then(\n      response => response.json()\n    );\n  } catch (error) {\n    throw new Error(error.message);\n  }\n};\n"],"names":["photoURL","profilePath","movieId","useParams","useState","actorInfo","setActorInfo","console","log","useEffect","fetchMoviesCast","then","data","catch","error","cast","map","id","profile_path","original_name","character","popularity","src","alt","width","height","BASE_URL","KEY","fetchTrending","fetch","response","json","Error","message","fetchSearchMovies","fetchMoviesDetails","fetchMoviesReviews"],"sourceRoot":""}